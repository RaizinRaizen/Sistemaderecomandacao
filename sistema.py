# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uRh068z8ITuG1x27_YXMp_XM4N08kUGE
"""

import numpy as np
from sklearn.cluster import KMeans

# Dados dos filmes assistidos
filmes_assistidos = np.array([
    [1, 0, 0, 1],  # usuário 1
    [1, 1, 0, 0],  # usuário 2
    [0, 1, 1, 0],  # usuário 3
    [0, 0, 1, 1],  # usuário 4
    [1, 0, 1, 0],  # usuário 5
    [0, 1, 0, 1],  # usuário 6
])

num_clusters = 2


kmeans = KMeans(n_clusters=num_clusters, random_state=0, n_init=10)
kmeans.fit(filmes_assistidos)


grupos_indice = kmeans.predict(filmes_assistidos)


print("Usuário pertence ao seguinte grupo:")
for i, cluster in enumerate(grupos_indice):
    print(f"Usuário {i + 1} pertence ao grupo {cluster + 1}")

print("\nFilmes assistidos:")
for i in range(len(filmes_assistidos)):
    assistidos = np.where(filmes_assistidos[i] == 1)[0] + 1
    print(f"Usuário {i + 1} assistiu aos filmes: {assistidos}")

def recomendar_filmes(filmes, filmes_assistidos, grupos_indice):
    filmes = np.array(filmes)
    grupo_usuario = kmeans.predict([filmes])[0]


    usuarios_no_mesmo_grupo = [i for i in range(len(grupos_indice)) if grupos_indice[i] == grupo_usuario]


    filmes_recomendados = set()
    for usuario in usuarios_no_mesmo_grupo:
        filmes_assistidos_usuario = np.where(filmes_assistidos[usuario] == 1)[0]
        filmes_recomendados.update(filmes_assistidos_usuario)


    filmes_recomendados = filmes_recomendados - set(np.where(filmes == 1)[0])

    return sorted([filme + 1 for filme in filmes_recomendados])


filmes_novos = [1, 0, 0, 0]
recomendacoes = recomendar_filmes(filmes_novos, filmes_assistidos, grupos_indice)
print(f"Filmes recomendados: {recomendacoes}")

filmes_assistidos_usuario = [1, 0, 1, 0]
filmes_recomendados = recomendar_filmes(filmes_assistidos_usuario, filmes_assistidos, grupos_indice)
print(f"/nFilmes recomendados: {filmes_recomendados}")